<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>apigee</groupId>
	<artifactId>pingstatus-v1-mock</artifactId>
	<version>1.0</version>
	<name>pingstatus-v1-mock</name>
	<packaging>pom</packaging>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>https://repo1.maven.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
		<project.root.dir>${basedir}</project.root.dir>
		<target.root.dir>${basedir}/target</target.root.dir>
		<commit>none</commit>
		<branch>a local</branch>
	</properties>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<apigee.profile>dev</apigee.profile>
				<apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.options>override</apigee.options>
				<apigee.config.dir>${target.root.dir}/resources/edge</apigee.config.dir>
				<apigee.config.exportDir>${target.root.dir}/test/integration</apigee.config.exportDir>
				<apigee.config.options>update</apigee.config.options>
				<apigee.app.ignoreAPIProducts>true</apigee.app.ignoreAPIProducts>
				<!-- -->
				<!-- Override on command line or replace with your values -->
				<apigee.org>apigeex-mint-kurt</apigee.org>
				<apigee.env>dev</apigee.env>
				<apigee.username>cicd-dev-service-account@apigeex-mint-kurt.iam.gserviceaccount.com</apigee.username>
				<apigee.serviceaccount.file>/Users/kurtkanaskie/work/APIGEEX/SAs/apigeex-mint-kurt-cicd-dev-service-account.json</apigee.serviceaccount.file>
				<api.northbound.domain>mp-xapi-dev.kurtkanaskie.net</api.northbound.domain>
				<api.testtag>' or @cors or @health or @errorHandling or @WIP or '</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<apigee.profile>test</apigee.profile>
				<apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.options>override</apigee.options>
				<apigee.config.dir>${target.root.dir}/resources/edge</apigee.config.dir>
				<apigee.config.exportDir>${target.root.dir}/test/integration</apigee.config.exportDir>
				<apigee.config.options>update</apigee.config.options>
				<apigee.app.ignoreAPIProducts>true</apigee.app.ignoreAPIProducts>
				<!-- -->
				<!-- Override on command line or replace with your values -->
				<apigee.org>apigeex-mint-kurt</apigee.org>
				<apigee.env>test</apigee.env>
				<apigee.username>cicd-test-service-account@apigeex-mint-kurt.iam.gserviceaccount.com</apigee.username>
				<apigee.serviceaccount.file>/Users/kurtkanaskie/work/APIGEEX/SAs/apigeex-mint-kurt-cicd-test-service-account.json</apigee.serviceaccount.file>
				<api.northbound.domain>mp-xapi-test.kurtkanaskie.net</api.northbound.domain>
				<api.testtag>' or @intg or @health or @errorHandling or @WIP or '</api.testtag>
				<!-- Custom variables for testing -->
				<userUsername>demouser</userUsername>
				<userPassword>demouser1</userPassword>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<apigee.profile>prod</apigee.profile>
				<apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.options>override</apigee.options>
				<apigee.config.dir>${target.root.dir}/resources/edge</apigee.config.dir>
				<apigee.config.exportDir>${target.root.dir}/test/integration</apigee.config.exportDir>
				<apigee.config.options>update</apigee.config.options>
				<apigee.app.ignoreAPIProducts>true</apigee.app.ignoreAPIProducts>
				<!-- -->
				<!-- Override on command line or replace with your values -->
				<apigee.org>apigeex-mint-kurt</apigee.org>
				<apigee.env>prod</apigee.env>
				<apigee.username>cicd-prod-service-account@apigeex-mint-kurt.iam.gserviceaccount.com</apigee.username>
				<apigee.serviceaccount.file>/Users/kurtkanaskie/work/APIGEEX/SAs/apigeex-mint-kurt-cicd-pord-service-account.json</apigee.serviceaccount.file>
				<api.northbound.domain>mp-xapi.kurtkanaskie.net</api.northbound.domain>
				<api.testtag>' or @intg or @health or @errorHandling or @WIP or '</api.testtag>
				<!-- Custom variables for testing -->
				<userUsername>demouser</userUsername>
				<userPassword>demouser1</userPassword>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- prefix: resources - copy the full apiproxy folder to target folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<overwrite>true</overwrite>
					<resources>
						<resource>
							<!--source -->
							<directory>${project.root.dir}</directory>
							<filtering>true</filtering>
							<includes>
								<include>resources/**</include>
								<include>apiproxy/**</include>
								<include>test/integration/**</include>
							</includes>
						</resource>
					</resources>
					<!--target -->
					<outputDirectory>${target.root.dir}</outputDirectory>
				</configuration>
			</plugin>

			<!-- prefix: replacer - Do replacements -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<id>replace</id>
						<phase>process-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<basedir>${target.root.dir}</basedir>
					<includes>
						<include>apiproxy/pingstatus-v1-mock.xml</include>
						<include>apiproxy/proxies/default.xml</include>
						<include>test/integration/test-config.json</include>
						<include>resources/edge/env/*/targetServers.json</include>
						<include>resources/edge/org/apiProducts.json</include>
						<include>resources/edge/org/developerApps.json</include>
						<include>resources/edge/org/developers.json</include>
						<include>resources/specs/pingstatus-oauth-v1.yaml</include>
					</includes>
					<replacements>
						<replacement>
							<token>API_NORTHBOUND_DOMAIN</token>
							<value>${api.northbound.domain}</value>
						</replacement>
						<replacement>
							<token>OAUTH_DOMAIN</token>
							<value>${oauth.domain}</value>
						</replacement>
						<replacement>
							<token>OAUTH_BASEPATH</token>
							<value>${oauth.basepath}</value>
						</replacement>
						<replacement>
							<token>DESCRIPTION</token>
							<value>commit ${commit} from ${branch} branch by ${user.name}</value>
						</replacement>
						<replacement>
							<token>REPLACE_USERNAME</token>
							<value>${user.username}</value>
						</replacement>
						<replacement>
							<token>REPLACE_PASSWORD</token>
							<value>${user.password}</value>
						</replacement>
						<replacement>
							<token>APIGEE_ENVIRONMENT</token>
							<value>${apigee.env}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.apigee.build-tools.enterprise4g</groupId>
				<artifactId>apigee-edge-maven-plugin</artifactId>
				<version>2.3.5</version>
				<executions>
					<execution>
						<id>configure-bundle-step</id>
						<phase>package</phase>
						<goals>
							<goal>configure</goal>
						</goals>
					</execution>
					<!--deploy bundle -->
					<execution>
						<id>deploy-bundle-step</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- install node, npm install, run apigeelint, run unit, run integration -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.13.3</version>
				<!-- NOTE: put executable in targetnode, otherwise uses node and deploy plugin thinks its a node.js proxy -->
				<configuration>
					<installDirectory>targetnode</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>validate</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v12.16.2</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>apigeelint</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run apigeelint</arguments>
						</configuration>
					</execution>
					<execution>
						<id>integration</id>
						<phase>install</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<skip>${skip.integration}</skip>
							<arguments>run integration -- --tags ${api.testtag}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- cleaning dirs -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>${skip.clean}</skip>
				</configuration>
				<executions>
					<execution>
						<id>auto-clean-init</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<!-- leave the target dir for debugging, post mortem -->
					<execution>
						<id>auto-clean-install</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
