<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="user-authentication-failed">
            <!-- <Condition>authenticate.response.status.code != 200</Condition> -->
            <Condition>servicecallout.SC-AuthenticateUser.failed = true</Condition>
            <Step>
                <Name>RF-AppAuthenticateFailed</Name>
            </Step>
        </FaultRule>
        <FaultRule name="client-authentication-failed">
            <!-- <Condition>authenticate.response.status.code != 200</Condition> -->
            <Condition>servicecallout.SC-UserAuthenticateClient.failed = true</Condition>
            <Step>
                <Name>RF-UserAuthenticateFailed</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>CORS</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="Token - Client Credentials">
            <Description/>
            <Request>
                <Step>
                    <Condition>(request.header.x-jwt != true)</Condition>
                    <Name>OA-GenerateAccessToken-ClientCredentials</Name>
                </Step>
                <Step>
                    <Condition>(request.header.x-jwt == true)</Condition>
                    <Name>KV-JWTSecret</Name>
                </Step>
                <Step>
                    <Name>AM-Debug</Name>
                </Step>
                <Step>
                    <Condition>(request.header.x-jwt == true)</Condition>
                    <Name>OA-GenerateAccessToken-ClientCredentials-JWT</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>(oauthV2.failed == false) and (request.header.x-jwt != true)</Condition>
                    <Name>AM-GenerateAccessToken-ClientCredentials</Name>
                </Step>
                <Step>
                    <Condition>(oauthV2.failed == false) and (request.header.x-jwt == true)</Condition>
                    <Name>AM-GenerateAccessToken-ClientCredentials-JWT</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>AM-ContentTypeJSON</Name>
                </Step>
                <Step>
                    <Condition>(response.content != "") and (oauthV2.failed == true)</Condition>
                    <Name>EV-OauthError</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>RF-OauthError</Name>
                </Step>
            </Response>
            <Condition>(request.verb = "POST") and (proxy.pathsuffix MatchesPath "/token") and (request.formparam.grant_type = "client_credentials")</Condition>
        </Flow>
        <Flow name="Token - Password">
            <Description/>
            <Request>
                <Step>
                    <Name>OA-VerifyAPIKey-and-Secret</Name>
                </Step>
                <Step>
                    <Name>AM-SetUsernamePasswordFromRequest</Name>
                </Step>
                <Step>
                    <Name>KV-config-values</Name>
                </Step>
                <Step>
                    <Name>AM-config-values</Name>
                </Step>
                <Step>
                    <Name>SC-AuthenticateUser</Name>
                </Step>
                <Step>
                    <Name>EV-TokenParams</Name>
                </Step>
                <Step>
                    <Name>JS-AdjustExpiryValues</Name>
                </Step>
                <Step>
                    <Name>OA-GenerateAccessToken-Password</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>oauthV2.failed == false</Condition>
                    <Name>AM-GenerateAccessToken-Password</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>AM-ContentTypeJSON</Name>
                </Step>
                <Step>
                    <Condition>(response.content != "") and (oauthV2.failed == true)</Condition>
                    <Name>EV-OauthError</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>RF-OauthError</Name>
                </Step>
            </Response>
            <Condition>(request.verb = "POST") and (proxy.pathsuffix MatchesPath "/token") and (request.formparam.grant_type = "password")</Condition>
        </Flow>
        <Flow name="Token - Refresh">
            <Description/>
            <Request>
                <Step>
                    <Name>OA-GetRefreshTokenInfo</Name>
                </Step>
                <Step>
                    <Name>AM-SetUsernamePasswordFromToken</Name>
                </Step>
                <Step>
                    <Name>KV-config-values</Name>
                </Step>
                <Step>
                    <Name>AM-config-values</Name>
                </Step>
                <Step>
                    <Name>SC-AuthenticateUser</Name>
                </Step>
                <Step>
                    <Name>EV-TokenParams</Name>
                </Step>
                <Step>
                    <Name>JS-AdjustExpiryValues</Name>
                </Step>
                <Step>
                    <Name>OA-RefreshAccessToken</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>oauthV2.failed == false</Condition>
                    <Name>AM-RefreshAccessToken</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>AM-ContentTypeJSON</Name>
                </Step>
                <Step>
                    <Condition>(response.content != "") and (oauthV2.failed == true)</Condition>
                    <Name>EV-OauthError</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>RF-OauthError</Name>
                </Step>
            </Response>
            <Condition>(request.verb = "POST") and (proxy.pathsuffix MatchesPath "/token") and (request.formparam.grant_type = "refresh_token")</Condition>
        </Flow>
        <Flow name="Token - JWT-Bearer Authorization">
            <Description/>
            <Request>
                <Step>
                    <Name>KV-JWTSecret</Name>
                </Step>
                <Step>
                    <Condition>request.formparam.grant_type != "urn:ietf:params:oauth:grant-type:jwt-bearer"</Condition>
                    <Name>RF-InvalidGrantTypeJWTBearer</Name>
                </Step>
                <Step>
                    <Name>AM-SetAudience</Name>
                </Step>
                <Step>
                    <Name>JW-Decode</Name>
                </Step>
                <Step>
                    <Name>JW-VerifyAssertion</Name>
                </Step>
                <Step>
                    <Condition>JWT.failed == true</Condition>
                    <Name>RF-JWTVerifyFailed</Name>
                </Step>
                <Step>
                    <Name>AE-APIKey</Name>
                </Step>
                <Step>
                    <Name>JS-SetJWTExpiration</Name>
                </Step>
                <Step>
                    <Name>AM-FauxClientCredentialsRequest</Name>
                </Step>
                <Step>
                    <Name>OA-GenerateAccessToken-JWTBearerAuthorization</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>oauthV2.failed == false</Condition>
                    <Name>AM-GenerateAccessToken-JWTBearer</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>AM-ContentTypeJSON</Name>
                </Step>
                <Step>
                    <Condition>(response.content != "") and (oauthV2.failed == true)</Condition>
                    <Name>EV-OauthError</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.failed == true</Condition>
                    <Name>RF-OauthError</Name>
                </Step>
            </Response>
            <Condition>(request.verb = "POST") and (proxy.pathsuffix MatchesPath "/token") and (request.formparam.grant_type = "urn:ietf:params:oauth:grant-type:jwt-bearer")</Condition>
        </Flow>
        <Flow name="token">
            <Description>Validate token and send response</Description>
            <Request>
                <Step>
                    <Name>OA-ValidateToken</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM-TokenInfo</Name>
                </Step>
            </Response>
            <Condition>(request.verb = "GET") and (proxy.pathsuffix MatchesPath "/token")</Condition>
        </Flow>
        <Flow name="jwt">
            <Description>Create JWT for use with assertion in JWT Bearer flow</Description>
            <Request>
                <Step>
                    <Name>KV-JWTSecret</Name>
                </Step>
                <Step>
                    <Name>AM-SetAudience</Name>
                </Step>
                <Step>
                    <Name>AM-Debug</Name>
                </Step>
                <Step>
                    <Name>JW-Create</Name>
                </Step>
                <Step>
                    <Name>AM-JWTResponse</Name>
                </Step>
            </Request>
            <Condition>(request.verb = "POST") and (proxy.pathsuffix MatchesPath "/jwt")</Condition>
        </Flow>
        <Flow name="catch all">
            <Description>Catch any unmatched calls and raise fault</Description>
            <Request>
                <Step>
                    <Name>RF-NotFound</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "**")</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/oauth/v2</BasePath>
    </HTTPProxyConnection>
    <RouteRule name="NoRoute"/>
</ProxyEndpoint>